  import Banner from "@/components/Banner";
import Header from "@/components/Header";
import Head from "next/head";
import ProductList from "@/components/ProductList";
import Feedback from "@/components/Feedback";
import Footer from "@/components/Footer";

export default function Home({products}) {
  return (
    <div>
      <Head>
        <title>megamart.com | Save Money. Live Better</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/assets/images/mega-mart-logo.png" />
        
      </Head>
      <main>
      <div className="bg-gray-200">
        <Header />
        
        <Banner />

        <ProductList products={products} />

        <Feedback />
        <Footer />
        </div>
        
       
      </main>
      
      
      </div>
  );
}

export async function getServerSideProps(context) {
  try {
    // Fetching data from the first API
    const response1 = await fetch("https://fakestoreapi.com/products");
    const data1 = await response1.json();
    // Fetching data from the second API
    const response2 = await fetch('https://dummyjson.com/products');
    const data2 = await response2.json();


    // Combining the data from both APIs into a single array
    const combinedData = [
      ...data1.map((product) => ({
        ...product,
        source: "API1", // source field to distinguish the data sources
        rating:product.rating.rate,
        ratingcount:product.rating.count,
        
      })),
      ...data2.products.map((product) => ({
        ...product,
        id: product.id + 100, // Modifying the id by adding 100 to avoid conflicts
        source: "API2", // Add a source field to distinguish the data sources
        image:product.images[0] ,
        ratingcount:product.stock * 2,
      })),
      
    ];

    console.log('Combined Data:', combinedData);

    return {
      props: {
        products: combinedData || [], 
      },
    };
  } catch (error) {
    console.error('Error fetching data:', error);
    return {
      props: {
        products: [], 
      },
    };
  }
}